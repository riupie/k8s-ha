# /etc/haproxy/haproxy.cfg
#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log /dev/log local0
    log /dev/log local1 notice
    maxconn 50000
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon
#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 1
    timeout http-request    10s
    timeout queue           20s
    timeout connect         5s
    timeout client          20s
    timeout server          20s
    timeout http-keep-alive 10s
    timeout check           10s

#---------------------------------------------------------------------
# apiserver frontend which proxys to the masters
#---------------------------------------------------------------------
frontend k8s-apiserver
    bind {{ kubernetes_apiserver_vip  }}:6443
    mode tcp
    option tcplog
    default_backend k8s-apiserver

#---------------------------------------------------------------------
## Ingress HTTP frontend to worker nodes
##---------------------------------------------------------------------
frontend ingress-http
    bind {{ kubernetes_apiserver_vip }}:80
    default_backend ingress-http
    mode tcp
    option tcplog

#---------------------------------------------------------------------
### Ingress HTTPS frontend to worker nodes
###---------------------------------------------------------------------
frontend ingress-https
    bind {{ kubernetes_apiserver_vip }}:443
    default_backend ingress-https
    mode tcp
    option tcplog


#---------------------------------------------------------------------
# round robin balancing for apiserver
#---------------------------------------------------------------------
backend k8s-apiserver
    option httpchk GET /healthz
    http-check expect status 200
    mode tcp
    option ssl-hello-chk
    balance     roundrobin
    default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
    {% for node in groups['master'] %}
    server {{ hostvars[node]['ansible_hostname'] }} {{ hostvars[node]['ansible_' ~ interface_api]['ipv4']['address'] }}:6443 check
    {% endfor %}

backend ingress-http
    balance roundrobin
    mode tcp
    {% for node in groups['worker'] %}
    server {{ hostvars[node]['ansible_hostname'] }} {{ hostvars[node]['ansible_' ~ interface_api]['ipv4']['address'] }}:80 check
    {% endfor %}

backend ingress-https
    balance roundrobin
    mode tcp
{% for node in groups['worker'] %}
    server {{ hostvars[node]['ansible_hostname'] }} {{ hostvars[node]['ansible_' ~ interface_api]['ipv4']['address'] }}:443 check
    {% endfor %}
